{"version":3,"sources":["components/Map.js","components/WelcomeModal.js","App.js","serviceWorker.js","index.js"],"names":["area","coords","topojson","feature_area","feature","geometry","coordinates","fix_winding","reverse","get_subcoords","npoints","slice","fill_area","cities","neighbors_idxs","initial_city","target_area","pushed_candidates","painted_cities","candidates","total_area","candidates_with_area","city","push","painted_cities_ids","map","cur","id","target","findIndex","idx","arr","find_neighbors","reduce","acc","filter","cur2","includes","sort","a","b","candidate","length","subregion","newpoint","lower","upper","Math","ceil","properties","codigo","name","get_subregion","MyMap","props","bindMap","el","leafletElement","onClick","e","point","features_with_bbox","latlng","lng","lat","point_city","bbox","x","y","point_in_bbox","find","vs","inside","i","j","xi","yi","xj","yj","point_in_polygon","uf","ReactGA","event","category","action","value","label","setState","flyTo","animate","duration","state","Municipios","Municipios_topojson","objects","Munic","features","coors","xs","ys","min","max","geometries","this","Map","center","zoom","style","width","height","ref","onclick","TileLayer","attribution","url","GeoJSON","key","data","stroke","color","Component","Modal","setAppElement","customStyles","content","top","bottom","transform","borderRadius","overlay","zIndex","backgroundColor","WelcomeModal","isopen","isOpen","onRequestClose","contentLabel","textAlign","href","fontSize","marginTop","initialize","pageview","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.56b4147e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Map, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css';\nimport * as topojson from \"topojson\";\nimport Municipios_topojson from './municipio.json'\nimport ReactGA from 'react-ga';\n\nfunction point_in_polygon(point, vs) {\n  // ray-casting algorithm based on\n  // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n  \n  var x = point[0], y = point[1];\n  \n  var inside = false;\n  for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      var xi = vs[i][0], yi = vs[i][1];\n      var xj = vs[j][0], yj = vs[j][1];\n      \n      var intersect = ((yi > y) != (yj > y))\n          && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n      if (intersect) inside = !inside;\n  }\n  \n  return inside;\n};\n\nfunction geojson_bbox(features){\n  return features.map((feature, idx, arr)=>{\n    const coors = feature.geometry.coordinates[0]\n    const xs = coors.map((cur, idx, arr)=>(cur[0]))\n    const ys = coors.map((cur, idx, arr)=>(cur[1]))\n    \n    return {\n      ...feature,\n      geometry: {\n        ...feature.geometry,\n        bbox: {\n          x: [Math.min(...xs), Math.max(...xs)], \n          y: [Math.min(...ys), Math.max(...ys)]\n        }\n      }\n    }\n  })\n}\n\nfunction point_in_bbox(point, bbox){\n  return (\n    (bbox.x[0]<point[0]) && (point[0]<bbox.x[1]) &&\n    (bbox.y[0]<point[1]) && (point[1]<bbox.y[1]))\n}\n\nfunction find_point_region(point, features){\n  const in_bbox = features.filter((cur, idx, arr)=>point_in_bbox(point, cur.geometry.bbox))\n  return in_bbox.find((cur, idx, arr)=>point_in_polygon(point, cur.geometry.coordinates[0]))\n}\n\nfunction find_neighbors(target, cities, neighbors_idxs){\n  // isso aqui pega o neighrbors calculado no topojjson e usa no geojson. Pode ser que ordem mude\n  // e vai gerar um bug\n  const idx = cities.findIndex((cur, idx, arr) => (cur.id === target.id))\n  const feature_neighbors = neighbors_idxs[idx].map((cur, idx, arr)=>cities[cur])\n  return feature_neighbors\n}\n\nfunction area(coords){\n  return topojson.sphericalRingArea(coords) * 6371**2\n}\n\nfunction feature_area(feature){\n  return area(feature.geometry.coordinates[0])\n}\n\nfunction winding_order_is_clockwise(coords){\n  // Source: https://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-points-are-in-clockwise-order\n  let area = 0\n  for(let i=0; i<coords.length-1; i++){\n    area += (coords[i+1][0] - coords[i][0]) * (coords[i+1][1] + coords[i][1])\n  }\n  area += (coords[0][0] - coords[coords.length-1][0]) * (coords[0][1] + coords[coords.length-1][1])\n  return area > 0\n}\n\nfunction fix_winding(coords){\n  if(area(coords)<510e6/2){\n    return coords\n  } else {\n    return coords.reverse()\n  }\n}\n\nfunction get_subcoords(coords, npoints){\n  return [...coords.slice(0, npoints), coords[0]]\n}\n\nfunction get_subregion(feature, target_area){\n  const coords = feature.geometry.coordinates[0]\n  let lower = 3\n  let upper = coords.length\n  let newpoint\n\n  if(area(fix_winding(get_subcoords(coords, lower))) > target_area){\n    return null\n  }\n  while (lower != upper - 1){\n    // binary search\n    newpoint = Math.ceil((lower + upper)/2)\n    if(area(fix_winding(get_subcoords(coords, newpoint))) > target_area){\n      upper = newpoint\n    } else {\n      lower = newpoint\n    }\n  }\n  const subregion = {\n    ...feature, \n    geometry:{\n      ...feature.geometry,\n      coordinates:[fix_winding(get_subcoords(coords, lower))],\n      id: -1\n    },\n    properties:{\n      ...feature.properties,\n      codigo: -1,\n      name: feature.properties.name + ' - partial'\n    }\n  }\n  return subregion\n\n}\n\nfunction fill_area(cities, neighbors_idxs, initial_city, target_area){\n  // TODO: Partial area at the end can be totally disconected from the main blob. Fix this\n  \n  let pushed_candidates = []\n  const painted_cities = []\n  let candidates = []\n  let total_area = 0\n\n  //Deals with initial city\n  let candidates_with_area = [{\n    city: initial_city,\n    area: feature_area(initial_city)\n  }]\n\n  if(candidates_with_area[0].area < target_area){\n    painted_cities.push(candidates_with_area[0].city)\n    total_area += candidates_with_area[0].area\n    pushed_candidates.push(candidates_with_area[0].city)\n  }\n  //Deals with neighbors\n  while (pushed_candidates.length > 0){\n    //populate candidates\n    let painted_cities_ids = painted_cities.map(cur=>cur.id)\n    candidates = pushed_candidates\n      .map(cur=>find_neighbors(cur, cities, neighbors_idxs))\n      .reduce((acc, cur, idx, arr)=>([...acc, ...cur]), [])\n      .filter((cur, idx, arr)=>arr.findIndex(cur2=>cur2.id==cur.id)==idx)\n      .filter(cur=>!painted_cities_ids.includes(cur.id))\n    //calculate area for candidates\n    candidates_with_area = candidates.map(cur=>({\n      city: cur,\n      area: feature_area(cur)\n    })).sort((a, b) => (b.area - a.area))\n    //Try to push candidates\n    pushed_candidates = []\n    for (let candidate of candidates_with_area){\n      if (total_area + candidate.area <= target_area){\n        painted_cities.push(candidate.city)\n        total_area += candidate.area\n        pushed_candidates.push(candidate.city)\n      } \n    }\n  }\n  //Deals with incomplete neighbor to fill the remaining gap\n  const smaller_candidate = candidates_with_area[candidates_with_area.length - 1]\n  const subregion = get_subregion(smaller_candidate.city, target_area - total_area)\n  if(subregion != null){\n    painted_cities.push(subregion)\n    total_area += feature_area(subregion)\n  }\n\n  return [painted_cities, total_area]\n}\n\nexport default class MyMap extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      painted_cities: null\n    }\n    const Municipios = topojson.feature(Municipios_topojson, Municipios_topojson.objects.Munic) \n    this.features_with_bbox = geojson_bbox(Municipios.features)\n    const geometries = Municipios_topojson.objects.Munic.geometries\n    this.neighbors_idxs = topojson.neighbors(geometries)\n  }\n  \n  bindMap = (el) => {\n    this.map = el.leafletElement;\n  }\n\n  onClick = (e) => {\n    const features_with_bbox = this.features_with_bbox\n    const neighbors_idxs = this.neighbors_idxs\n\n    const {lng, lat} = e.latlng\n    \n    const point_city = find_point_region([lng, lat], features_with_bbox)\n    if (point_city){\n      const [painted_cities, total_area] = fill_area(features_with_bbox, neighbors_idxs, point_city, 23000) \n      const {codigo, name, uf} = point_city.properties\n      ReactGA.event({\n        category: 'Debugging',\n        action: 'Total area',\n        value: Math.ceil(total_area)\n      })\n      ReactGA.event({\n        category: 'User',\n        action: 'Selected city',\n        label:  `${codigo}-${name}-${uf}`,\n        value: 1\n      })\n      this.setState({painted_cities}, ()=>{\n        //TODO: zoom on bound box of the painted region, not on the selected point\n        this.map.flyTo({lng, lat}, 7.5, {\n          animate: true,\n          duration: 1\n        })\n      })\n    }\n    \n  }\n\n  render() {\n    const {painted_cities} = this.state\n    return (\n      <Map \n        center={{\n          lat: -12.503748,\n          lng: -55.149975,\n        }} \n        zoom={4} \n        style={{ width: '100%', height: '100%',}}\n        ref={this.bindMap}\n        onclick={this.onClick}\n      >\n      <TileLayer\n        attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      {painted_cities !== null && \n        <GeoJSON \n          key={painted_cities.map(cur=>cur.id).reduce((acc, cur)=>acc+cur)} \n          data={painted_cities} \n          style={{stroke: false, color:'#f00'}}/>}\n      </Map>\n      )\n  }\n}","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    // left                  : '50%',\n    // right                 : 'auto',\n    bottom                : 'auto',\n    // marginRight           : '-50%',\n    transform             : 'translate(0%, -50%)',\n    borderRadius: '20px'\n  },\n  overlay: {\n    zIndex: 1000,\n    backgroundColor: 'rgba(255, 255, 255, 0.75)'\n  }\n};\n\nexport default class WelcomeModal extends Component {\n  constructor(props){\n    super(props)\n    this.state = {isopen: true}\n  }\n  render(){\n    return (\n      <Modal\n        isOpen={this.state.isopen}\n        onRequestClose={()=>this.setState({isopen:false})}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <h2 style={{textAlign: 'center'}}>E se fosse lá em casa?</h2>\n        <p style={{textAlign: 'justify'}}>\n          O pantanal está em chamas. São 23 mil km<sup>2</sup> destruídos pelo fogo só esse ano \n          <a href=\"https://g1.globo.com/natureza/noticia/2020/09/24/pantanal-bioma-mais-preservado-ate-2018-perdeu-ao-menos-10-vezes-mais-area-em-2020-que-em-18-anos.ghtml\">\n            [1]\n          </a> \n          <a href=\"https://g1.globo.com/mt/mato-grosso/noticia/2020/09/09/area-queimada-no-pantanal-ja-passa-de-2-milhoes-de-hectares-tamanho-referente-a-10-vezes-as-cidades-de-sp-e-rj-juntas.ghtml\">\n            [2]\n          </a>. \n          Sabe o quanto é isso? Clique no mapa e veja uma região \n          equivalente a destruida no pantanal só esse ano.\n        </p>\n        <p style={{textAlign: 'right', fontSize:'small', marginTop: '30px'}}>Encontrou um Bug? Nos ajude reportando-o em email.brasilemchamas@gmail.com</p>\n      </Modal>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\n// import axios from 'axios';\nimport Map from './components/Map'\nimport WelcomeModal from './components/WelcomeModal'\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('UA-179640894-1');\nReactGA.pageview('/homepage');\n\nclass App extends Component {\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%',}}>\n        <WelcomeModal/>\n        <Map/>\n      </div>\n      \n    );\n  }\n }\n export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}